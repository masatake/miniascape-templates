site: {{ site }}

rhui:
  # example: 54fb6627dbaa37721048e4549db3224d.pem
  rhui_entitlement_cert: &rhui_entitlement_cert {{ rhui_entitlement_cert }}

  # example: "/C=JP/ST=Tokyo/O=Example, Inc./CN="
  ssl_cert_subject: &ssl_cert_subject "/C={{ ssl_cert_subject.country|default('JP') }}/ST={{ ssl_cert_subject.state|default('Tokyo') }}/O={{ ssl_cert_subject.org }}/CN="

  rhua:
    ip: &rhua_ip {{ rhua.ip }}
    fqdn: &rhua_fqdn {{ rhua.fqdn }}
    hostname: &rhua_hostname {{ rhua.hostname }}
    cds_cluster: &cds_cluster {{ rhua.cds_cluster|default('cds_cluster') }}

{% for cds in cdses %}  cds-{{ loop.index }}:
    ip: &cds_{{ loop.index }}_ip {{ cds.ip }}
    fqdn: &cds_{{ loop.index }}_fqdn {{ cds.fqdn }}
    hostname: &cds_{{ loop.index }}_hostname {{ cds.hostname }}
    cli_fqdn: &cds_{{ loop.index }}_cli_fqdn {{ cds.cli_fqdn }}
{% endfor %}
common:
  domain: &domain {{ domain }}
  gateway: &gateway {{ gateway }}
  netmask: &netmask {{ netmask|default('255.255.255.0') }}
  nameservers:
{% for ns in nameservers %}    - ip: {{ ns.ip }}
{% endfor %}
{% for ns in ntpservers %}  ntpservers:
    - hostname: {% if ns.hostname is defined %}{{ ns.hostname }}{% else %}{{ ns.ip }}{% endif %}
{% endfor %}
  name_prefix: {% if name_prefix is defined %}{{ name_prefix }}{% else %}{{ site }}{% endif %}

  hosts:
    # RHUA:
    - ip: *rhua_ip
      fqdn: *rhua_fqdn
      hostname: *rhua_hostname

    # CDS 1:
    - ip: *cds_1_ip
      fqdn: *cds_1_fqdn
      hostname: *cds_1_hostname

    # CDS 2:
    - ip: *cds_2_ip
      fqdn: *cds_2_fqdn
      hostname: *cds_2_hostname

    # CDS 1 for clients:
    - ip: *cds_1_ip
      fqdn: *cds_1_cli_fqdn
      hostname: *cds_1_hostname

    # CDS 2 for clients:
    - ip: *cds_2_ip
      fqdn: *cds_2_cli_fqdn
      hostname: *cds_2_hostname

  virtinst:
    location: {{ virtinst.location }}

  test:
    # change DNS server addresses to gateway's one:
    #mod_for_test_env: "sed -e 's,ks.cfg,test.ks.cfg,g'
    mod_for_test_env: {{ test.mod_for_test_env }}

networks:
{% for net in networks %}  - name: &rhui_network_{{ loop.index }} {% if net.name is defined %}{{ net.name }}{% else %}{{ site }}-rhui-net-{{ loop.index }}{% endif %}
    mode: nat
    bridge: {% if net.bridge is defined %}{{ net.bridge }}{% else %}virbr{{ site }}{{ loop.index }}{% endif %}
    domain: {% if net.domain is defined %}{{ net.domain }}{% else %}*domain{% endif %}
    gateway: {% if net.gateway is defined %}{{ net.gateway }}{% else %}*gateway{% endif %}
    netmask: {% if net.netmask is defined %}{{ net.netmask }}{% else %}*netmask{% endif %}
    network: {{ net.network }}
{% if net.dhcp is defined -%}
    dhcp:
      start: {{ net.dhcp.start }}
      end: {{ net.dhcp.end }}
      static:
        start: {{ net.dhcp.static.start }}
        end: {{ net.dhcp.static.end }}
{%- endif %}
{% endfor %}

guests:

  - name: rhua
    description: RHUA server

    cert:
      key_length: 2048
      expiration_dates: 3650
      subject: *ssl_cert_subject

    rhui_entitlement_certs:
      - *rhui_entitlement_cert

    templates:
      autoinst:
        src: autoinstall.d/rhua-ks.cfg

    setup_data:
      - src: data/rhua/answers.txt
        dst: answers.txt
      - src: data/rhua/Makefile
        dst: Makefile
      - src: data/rhua/Makefile.certs
        dst: certs/Makefile
      - src: data/rhua/gen_rpm_gpgkey.sh
        dst: gen_rpm_gpgkey.sh
      - src: *rhui_entitlement_cert

    cds:
      cluster: *cds_cluster

    cdsservers:
      - name: *cds_1_hostname
        fqdn: *cds_1_fqdn
        cluster: *cds_cluster
      - name: *cds_2_hostname
        fqdn: *cds_2_fqdn
        cluster: *cds_cluster

    guests:
      - name: rhua
        hostname: *rhua_hostname
        ip: *rhua_ip
        interfaces:
          - network: *rhui_network_1
            bootproto: static
            options: --activate
            nodns: true

        virtinst:
          extra_args: ip={{ rhua.ip }} netmask={{ netmask }} gateway={{ gateway }}

  - name: cds
    description: RHUI CDS Server

    templates:
      autoinst:
        src: autoinstall.d/rhui-cds-ks.cfg

    setup_data:
      - src: data/rhui-cds/Makefile
        dst: Makefile

    guests:
{% for cds in cdses %}      - hostname: *cds_{{ loop.index }}_hostname
        name: cds-{{ loop.index }}
        ip: *cds_{{ loop.index }}_ip
        interfaces:
          - network: *rhui_network_1
            bootproto: static
            options: --activate
            nodns: true

        virtinst:
          extra_args: ip={{ cds.ip }} netmask={{ netmask }} gateway={{ gateway }}
{% endfor %}
  - name: rhel-6-rhui-client
    description: RHEL 6 client systems using CCP subscriptions
    templates:
      autoinst:
        src: autoinstall.d/rhui-rhel-6-client-ks.cfg

    disks:
      - pool: default  # see `storage_pools`
        format: qcow2
        cache: none
        size: 7
        bus: virtio

    guests:
      - hostname: {{ clients[0].hostname }}
        interfaces:
          - network: *rhui_network_1
            ip: {{ clients[0].ip }}
            gateway: *gateway
            netmask: *netmask
            bootproto: static

        virtinst:
          extra_args: ip={{ clients[0].ip }} netmask={{ netmask }} gateway={{ gateway }}

  - name: rhel-5-rhui-client
    description: RHEL 5 client systems using CCP subscriptions

    filesystem: ext3
    virtinst:
      location: {{ virtinst.location_rhel5 }}
      os_variant: rhel5.4

    disks:
      - pool: default  # see `storage_pools`
        format: qcow2
        cache: none
        size: 7
        bus: virtio

    templates:
      autoinst:
        src: autoinstall.d/rhui-rhel-5-client-ks.cfg

    guests:
      - hostname: {{ clients[1].hostname }}
        interfaces:
          - network: *rhui_network_1
            ip: {{ clients[1].ip }}
            gateway: *gateway
            netmask: *netmask
            bootproto: static

        virtinst:
          extra_args: ip={{ clients[1].ip }} netmask={{ netmask }} gateway={{ gateway }}

# vim:sw=2:ts=2:et:ft=django:
