# {# vim:sw=4:ts=4:et:ft=sh:
#  #}
# $1: The content of ${boot_params} file
# output: bootdev device name or an empty string
find_bootdev () {
    echo "$1" | sed -nr 's/^bootdev="?([^"]+)"?$/\1/p'
}

# $1: boot bond spec, e.g. bond0:em1,em2:mode=active-backup,downdelay=5000,
#   bond1:em3,em4.
# output: Parsed result, e.g. 'bond=bond1; slaves=em3,em4',
#   'bond=bond0; slaves=em1,em2; bond_opts=mode=active-backup,downdelay=5000'
#   or an empty string means parse failure.
parse_bond_spec () {
    echo "$1" | sed -nr 's/^(bond[^:]+):([^:]+)(:([^:]+))?/bond=\1;slaves=\2;bond_opts=\4/p'
}

# $1: ip spec, e.g. '(dhcp|dhcp6|auto6|ibft)'.
# output: automatic configuration method (bootproto) or an empty string
parse_ip_spec__auto_config_all_bootproto () {
    local method=$(echo "$1" | sed -nr 's/^([^:]+)$/\1/p')
    if test -z "${method}"; then
        echo ''
    else
        # TODO: What should be choosen as bootproto for the method, dhcp6 and auto6 ?
        test "${method}" = "ibft" && bootproto=ibft || bootproto=dhcp
        echo "${bootproto}"
    fi
}

# $1: Link up interface devices list by `/sbin/ip -o link show up` or none
# output: Link up interface device names or an empty string
list_linkup_interfaces () {
    local out="${1:-$(/sbin/ip -o link show up)}"
    cat << EOF | sed -nr '/ lo:/d; / virbr[[:digit:]]+:/d; / docker[[:digit:]]+:/d; s/^[[:digit:]]+: ([^:]+): .*/\1/p'
${out}
EOF
}

# $1: ip spec, e.g. '(iface_name):(dhcp|dhcp6|auto6|ibft)'.
# output: interface name and automatic configuration bootproto, or an empty string
# see: function:`ip_auto_config_all_bootproto`
parse_ip_spec__auto_config () {
    local iface_method=$(echo "$1" | sed -nr 's/^([^:]+):([^:]+)$/iface=\1;method=\2/p')
    if test -z "${iface_method}"; then
        echo ''
    else
        local method=$(echo "${iface_method}" | sed -nr 's/^iface=[^;]+;method=(.+)$/\1/p')
        test ${method} = "ibft" && bootproto=ibft || bootproto=dhcp
        echo "${iface_method};bootproto=${bootproto}"
    fi
}

# $1: ip spec, e.g. 'ip::gateway:netmask:[hostname]:interface:none'
# output: interface static config def. (iface name, ip, gateway, netmask,
#   hostname) or an empty string
parse_ip_spec__static_config () {
    echo "$1" | sed -nr 's/^([^:]+)::([^:]+)?:([^:]+):([^:]+)?:([^:]+):none$/ip=\1;gateway=\2;netmask=\3;hostname=\4;iface=\5/p'
}
